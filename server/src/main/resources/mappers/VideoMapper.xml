<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="com.SOOKTUBE.dao.VideoDAO">
 
    <insert id="newVideo"
            parameterType="com.SOOKTUBE.model.VideoDTO"
            useGeneratedKeys="true"
            keyProperty="videoID">
        INSERT INTO VIDEO(`videoTitle`, `videoDesc`, `videoDate`, `username`, `uploadFileName`)
        VALUES (#{videoTitle}, #{videoDesc}, CURRENT_TIMESTAMP, #{username}, #{uploadFileName})
    </insert>

    
        <select id="getDescbyVideoID" 
    		parameterType="Integer" 
    		resultType="com.SOOKTUBE.model.VideoDTO">
    		
    		SELECT `videoID`, `videoTitle`, `videoDesc`, `videoDate`, `username`, `uploadFileName`, `videoPath`
    		FROM VIDEO
    		WHERE `videoID` = #{videoID}
    		
    		</select>
    		
        <select id="getDescbyUser" 
    		parameterType="String" 
    		resultType="com.SOOKTUBE.model.VideoDTO">
    		
    		SELECT `videoID`, `videoTitle`, `videoDesc`, `videoDate`, `username`, `uploadFileName`, `videoPath`
    		FROM VIDEO
    		WHERE `username` = #{username, jdbcType=VARCHAR}
    		
    		</select>
    		
        <select id="getDescbyUserOrderBy" 
    		resultType="com.SOOKTUBE.model.VideoDTO">
    		
    		SELECT `videoID`, `videoTitle`, `videoDesc`, `videoDate`, `username`, `uploadFileName`, `videoPath`, `like`
    		FROM VIDEO
    		WHERE `username` = #{username, jdbcType=VARCHAR}
    		
    		ORDER BY
        		<choose>
            		<when test="order == 'videoDate'">
                		`videoDate`
            		</when>
            		<when test="order == 'like'">
                		`like`
            		</when>

        		</choose>
       		DESC
       			<choose>
       				<when test="order == 'like'">
       					, `videoDate`
       					DESC
       				</when>
       			</choose>
    		
    		<if test='limit != null and offset != null'>
    		LIMIT #{limit} OFFSET #{offset}
    		</if>
    		
    		</select>
    		

    		
    		    		
    	        <select id="getDescbyFile" 
    		parameterType="String" 
    		resultType="com.SOOKTUBE.model.VideoDTO">
    		
    		SELECT `videoID`, `videoTitle`, `videoDesc`, `videoDate`, `username`, `uploadFileName`, `videoPath`
    		FROM VIDEO
    		WHERE `uploadFileName` = #{uploadFileName}
    		
    		</select>	
    	    		
         <select id="getDescbyListID" 
    		parameterType="Integer" 
    		resultType="com.SOOKTUBE.model.VideoDTO">
    		
    		SELECT listInfo.`listID`, VIDEO.`videoID`, `videoTitle`, `videoDesc`, `videoDate`, VIDEO.`username`, `uploadFileName`, `videoPath`,
    					videoList.`like`, videoList.`dislike`
    		FROM VIDEO, listInfo, videoList
    		WHERE listInfo.`listID` = #{listID}
    			AND
    				videoList.`videoID` = VIDEO.`videoID`
    			AND listInfo.`listID` = videoList.`listID`
    		
    		</select>

         <select id="getDescbyListIDOrderBy" 
    		parameterType="Integer" 
    		resultType="com.SOOKTUBE.model.VideoDTO">
    		
    		SELECT listInfo.`listID`, VIDEO.`videoID`, `videoTitle`, `videoDesc`, `videoDate`, VIDEO.`username`, `uploadFileName`, `videoPath`,
    					videoList.`like`, videoList.`dislike`
    		FROM VIDEO, listInfo, videoList
    		WHERE listInfo.`listID` = #{listID}
    			AND
    				videoList.`videoID` = VIDEO.`videoID`
    			AND listInfo.`listID` = videoList.`listID`
    		
    		
    		ORDER BY
        		<choose>
            		<when test="order == 'videoDate'">
                		`videoDate`
            		</when>
            		<when test="order == 'like'">
                		videoList.`like` + videoList.`dislike`
            		</when>

        		</choose>
       		DESC
       			<choose>
       				<when test="order == 'like'">
       					, `videoDate`
       					DESC
       				</when>
       			</choose>       		
    		
    		<if test='limit != null and offset != null'>
    		LIMIT #{limit} OFFSET #{offset}
    		</if>
    		
    		</select>


         <select id="getDescbyListIDGTEQ5" 
    		parameterType="Integer" 
    		resultType="com.SOOKTUBE.model.VideoDTO">
    		
            SELECT listInfo.`listID`, VIDEO.`videoID`, `videoTitle`, `videoDesc`, `videoDate`, VIDEO.`username`, `uploadFileName`, `videoPath`,
            		videoList.`like`, videoList.`dislike`
    		FROM VIDEO, listInfo, videoList
    		WHERE listInfo.`listID` = #{listID}
    			AND
    				videoList.`videoID` = VIDEO.`videoID`
    			AND listInfo.`listID` = videoList.`listID`
                AND videoList.`like` + videoList.`dislike` &gt;= 5
                
    		ORDER BY
        		<choose>
            		<when test="order == 'videoDate'">
                		`videoDate`
            		</when>
            		<when test="order == 'like'">
                		videoList.`like` + videoList.`dislike`
            		</when>

        		</choose>
       		DESC
       			<choose>
       				<when test="order == 'like'">
       					, `videoDate`
       					DESC
       				</when>
       			</choose>
    		
    		<if test='limit != null and offset != null'>
    		LIMIT #{limit} OFFSET #{offset}
    		</if>
    		
    		</select>


         <select id="getDescbyListBetween0and5" 
    		parameterType="Integer" 
    		resultType="com.SOOKTUBE.model.VideoDTO">
    		<!-- 0이상 5 미만 -->
    		
            SELECT listInfo.`listID`, VIDEO.`videoID`, `videoTitle`, `videoDesc`, `videoDate`, VIDEO.`username`, `uploadFileName`, `videoPath`,
            				videoList.`like`, videoList.`dislike`
    		FROM VIDEO, listInfo, videoList
    		WHERE listInfo.`listID` = #{listID}
    			AND
    				videoList.`videoID` = VIDEO.`videoID`
    			AND listInfo.`listID` = videoList.`listID`
                AND videoList.like + videoList.dislike BETWEEN 0 AND 4
                
    		ORDER BY
        		<choose>
            		<when test="order == 'videoDate'">
                		`videoDate`
            		</when>
            		<when test="order == 'like'">
                		videoList.`like` + videoList.`dislike`
            		</when>

        		</choose>
       		DESC
       			<choose>
       				<when test="order == 'like'">
       					, `videoDate`
       					DESC
       				</when>
       			</choose>       		
    		
    		<if test='limit != null and offset != null'>
    		LIMIT #{limit} OFFSET #{offset}
    		</if>
    		
    		</select>
    		   
    <select id="getURLfromVideoID" 
    		parameterType="Integer" 
    		resultType="String">
    		
    		SELECT `uploadFileName`
    		FROM VIDEO
    		WHERE `videoID` = #{videoID}
    		
    		</select>
    		
        <select id="getURLfromUsername" 
    		parameterType="String" 
    		resultType="String">
    		
    		SELECT `uploadFileName`
    		FROM VIDEO
    		WHERE `username` = #{username}
    		
    		</select>
    		
    		
    	<select id="getURLfromFilename"
    			parameterType="String"
    			resultType="String">
    			
    			SELECT `uploadFileName`
    			FROM VIDEO
    			WHERE `uploadFileName` = #{uploadFileName}
    			
    			</select>


    	<select id="getURLfromTitle"
    			parameterType="String"
    			resultType="String">
    			
    			SELECT `uploadFileName`
    			FROM VIDEO
    			WHERE `videoTitle` = #{videoTitle}
    			
    			</select>    			
    			
    	<select id="searchVideobyTitle"
    			parameterType="String"
    			resultType="com.SOOKTUBE.model.VideoDTO">
    			
    			SELECT `videoID`, `videoTitle`, `videoDesc`, `videoDate`, `username`, `uploadFileName`, `videoPath`, `like`
    			FROM VIDEO
    			WHERE `videoTitle` LIKE CONCAT('%',#{videoTitle},'%')
    			
	    		ORDER BY
	        		<choose>
	            		<when test="order == 'videoDate'">
	                		`videoDate`
	            		</when>
	            		<when test="order == 'like'">
	                		`like`
	            		</when>
	
	        		</choose>
	       		DESC
       			<choose>
       				<when test="order == 'like'">
       					, `videoDate`
       					DESC
       				</when>
       			</choose>	       		
	    		
	    		<if test='limit != null and offset != null'>
	    		LIMIT #{limit} OFFSET #{offset}
	    		</if>

    			</select>
    			
    	<select id="searchVideobyTitleformList"
    			resultType="com.SOOKTUBE.model.VideoDTO">
    			
    			SELECT DISTINCT videoList.`listID`, videoList.`videoID`, `videoTitle`, `videoDesc`, `videoDate`, VIDEO.`username`, `uploadFileName`, `videoPath`,
    							videoList.`like`, videoList.`dislike`
    			FROM VIDEO, videoList
    			WHERE `videoTitle` LIKE CONCAT('%', #{videoTitle}, '%')
                AND videoList.`listID` = #{listID}
                AND VIDEO.`videoID` = videoList.`videoID`
                AND VIDEO.`videoID` IN (SELECT `videoID`
										FROM videoList 
                                        WHERE `listID` = #{listID})

	    		ORDER BY
	        		<choose>
	            		<when test="order == 'videoDate'">
	                		`videoDate`
	            		</when>
	            		<when test="order == 'like'">
	                		videoList.`like` + videoList.`dislike`
	            		</when>
	
	        		</choose>
	       		DESC
       			<choose>
       				<when test="order == 'like'">
       					, `videoDate`
       					DESC
       				</when>
       			</choose>	       		
	    		
	    		<if test='limit != null and offset != null'>
	    		LIMIT #{limit} OFFSET #{offset}
	    		</if>

    			</select>
    			
    	<select id="findVideoinList"
    			resultType="com.SOOKTUBE.model.VideoDTO">
    			
    			SELECT videoList.`like`, videoList.`dislike`, videoList.`listID`
    			FROM videoList, VIDEO
    			WHERE videoList.`videoID` = #{videoID}
    				AND videoList.`listID` = #{listID}
    					AND videoList.`videoID` = VIDEO.`videoID`
    			</select>
    			
<!--     	 <select id="getVideoPath"
    			parameterType="Integer"
    			resultType="String">
    			
    			SELECT `videoPath`
    			FROM VIDEO
    			WHERE `uploadFileName` = #{uploadFileName}
    			
    			</select>	 -->	
    			
    			
    	    <update id="editVideo" parameterType="com.SOOKTUBE.model.VideoDTO">
        UPDATE VIDEO
           SET `videoTitle` = #{videoTitle}
             , `videoDesc` = #{videoDesc}
             , `videoDate` = CURRENT_TIMESTAMP
         WHERE `videoID` = #{videoID}
    </update>
    
    
    <delete id="deleteVideobyID"> 
    	DELETE FROM VIDEO
    	WHERE `videoID` = #{videoID}
    </delete>
    			
    <delete id="deleteVideobyFileName">
    	DELETE FROM VIDEO
    	WHERE `uploadFileName` = #{uploadFileName}
    </delete>

    

</mapper>


<!-- videoID int(11) PK 
videoTitle varchar(20) 
videoDesc text 
videoDate date 
userID varchar(50) -->